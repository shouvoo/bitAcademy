/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2017-12-01 08:21:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp/include/include.jsp", Long.valueOf(1512115432527L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!-- 부트스트랩 css파일 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/css/bootstrap.min.css\">\r\n");
      out.write("<!-- jquery 파일 -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/jquery.cookie.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/waitme/waitMe.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/common.js\"></script>\r\n");
      out.write("<!-- 부트스트랩 js파일 -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!-- baisc.css 파일 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/basic.css\">\r\n");
      out.write("<!-- 폰트어썸 CDN(Content Delivery Network) -->\r\n");
      out.write("<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\r\n");
      out.write("<!-- 구글 폰트 -->\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\">\r\n");
      out.write("<!-- w3.css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("<!-- Roboto폰트 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto\">\r\n");
      out.write("<!-- Montserrat 폰트 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Montserrat\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js\"></script>\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("div:not(.line){border:1px solid black; background: white;\r\n");
      out.write("float: left; display: grid;}\r\n");
      out.write("div.line{height: 20px; display: grid;}\r\n");
      out.write("span{transition-duration: 1s;}\r\n");
      out.write("span.green{color:green;}\r\n");
      out.write("span.red{color:red;}\r\n");
      out.write("select{height: 22px;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t<form id=\"form\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<font>아이디</font><input type=\"text\" name=\"id\">\r\n");
      out.write("\t\t<span></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<font>비밀번호</font><input type=\"password\" name=\"pass\">\r\n");
      out.write("\t\t<span></span>\r\n");
      out.write("\t\t<button class=\"passLook\" type=\"button\">비밀번호 보기</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<font>비밀번호 재확인</font><input type=\"password\" name=\"pw2\">\r\n");
      out.write("\t\t<span></span>\r\n");
      out.write("\t\t<button class=\"passLook\" type=\"button\">비밀번호 보기</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"line\"></div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<font>이름</font><input type=\"text\" name=\"name\">\r\n");
      out.write("\t\t<span></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<font>Email 아이디</font><input type=\"text\" name=\"email1\">\r\n");
      out.write("\t\t<span></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<font>Email 도메인</font>\r\n");
      out.write("\t\t<select name=\"email2\">\r\n");
      out.write("\t\t\t<option value=\"@gmail.com\">@gmail.com</option>\r\n");
      out.write("\t\t\t<option value=\"@naver.com\">@naver.com</option>\r\n");
      out.write("\t\t\t<option value=\"@daum.net\">@daum.net</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<span class=\"green\">사용 가능한 Email 도메인입니다.</span>\r\n");
      out.write("\t\t<button type=\"button\">직접 입력하기</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<font>주소</font>\r\n");
      out.write("\t\t<input name=\"address\" readonly=\"readonly\">\r\n");
      out.write("\t\t<button type=\"button\">Daum 주소</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div><button type=\"button\" class=\"siba\">제출</button></div>\r\n");
      out.write("\t\t\r\n");
      out.write("<!-- \t\t<div> -->\r\n");
      out.write("<!-- \t\t<font>Email 인증 코드</font> -->\r\n");
      out.write("<!-- \t\t<span></span> -->\r\n");
      out.write("<!-- \t\t<button type=\"button\" class=\"emailkey\">Email 인증 전송</button> -->\r\n");
      out.write("<!-- \t\t</div> -->\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js?autoload=false\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\tvar path = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* $(document).keyup(function (e) {\r\n");
      out.write("\t\t\t\tif (e.keyCode === 9) {\r\n");
      out.write("\t\t\t\t\twhile(true) {\r\n");
      out.write("\t\t\t\t\t\tif ($(\":focus\").next() ==\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}); */\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfunction input() {\r\n");
      out.write("\t\t\t\t$(\"input\").attr(\"autocomplete\", \"off\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar civa = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tinput();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar siva = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"button.siba\").click(function () {\r\n");
      out.write("\t\t\t\tif($(\"span.green\").length == 7) {\t\t\r\n");
      out.write("\t\t\t\t\tif(!siva) {\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\turl: path+\"/member/insert.json\",\r\n");
      out.write("\t\t\t\t\t\t\tdata: $(\"#form\").serialize(),\r\n");
      out.write("\t\t\t\t\t\t\tbeforesend: function () {\r\n");
      out.write("\t\t\t\t\t\t\t\tsiva = true;\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsuccess: function () {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"가입 성공.\")\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.href = path+\"/member/email.do\";\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\terror: function () {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"에러 남\");\r\n");
      out.write("\t\t\t\t\t\t\t\tsiva = false;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse alert(\"빈 거 있음.\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"button:eq(3)\").click(function(){\r\n");
      out.write("\t\t\t\tvar sib = $(this).prev();\r\n");
      out.write("\t\t\t\tvar siv = $(this).parent();\r\n");
      out.write("\t\t\t\tdaum.postcode.load(function(){\r\n");
      out.write("\t\t\t        new daum.Postcode({\r\n");
      out.write("\t\t\t            oncomplete: function(data) {\r\n");
      out.write("\t\t\t            \tsib.val(data.roadAddress);\r\n");
      out.write("\t\t\t            \tsiv.append($(\"<span>\").text(\"사용 가능한 주소입니다 \").addClass(\"green\"))\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        }).open();\r\n");
      out.write("\t\t\t    });\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\t\r\n");
      out.write("// \t\t\t$(\"button.emailkey\").click(function () {\r\n");
      out.write("// \t\t\t\tvar t = $(this);\r\n");
      out.write("// \t\t\t\t$.ajax({\r\n");
      out.write("// \t\t\t\t\turl: path+\"/member/email.json\",\r\n");
      out.write("// \t\t\t\t\tdata: \"email=\"+$(\"input[name='email1']\").val()+$(\"[name='email2']\").val(),\r\n");
      out.write("// \t\t\t\t\tsuccess: function () {\r\n");
      out.write("// \t\t\t\t\t\tt.before($(\"<input type='text' id='siba'>\"));\r\n");
      out.write("// \t\t\t\t\t\tt.attr(\"class\", \"chk\").text(\"코드 체크\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("// \t\t\t\t\t\t$(\"button.chk\").click(function () {\r\n");
      out.write("// \t\t\t\t\t\t\t$.ajax({\r\n");
      out.write("// \t\t\t\t\t\t\t\turl: path+\"/member/emailchk.json\",\r\n");
      out.write("// \t\t\t\t\t\t\t\tdata: \"emailkey\"+$(\"#siba\").text(),\r\n");
      out.write("// \t\t\t\t\t\t\t\tsuccess: function (data) {\r\n");
      out.write("// \t\t\t\t\t\t\t\t\tif(data) {\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t\tt.append($(\"<span>\").addClass(\"green\").text(\"인증 성공\"));\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t\t$(\"input[name^='email']\").attr(\"readonly\", \"readonly\");\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t\t$(\"select[name='email2']\").attr(\"disabled\", \"disabled\");\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t\t$(\"[name^='email']\").css(\"color\", \"gray\");\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t\tt.prev().remove();\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t\tt.append($(\"<span>\").addClass(\"red\").text(\"인증 실패\"));\r\n");
      out.write("// \t\t\t\t\t\t\t\t\t}\r\n");
      out.write("// \t\t\t\t\t\t\t\t\tt.remove();\r\n");
      out.write("// \t\t\t\t\t\t\t\t}\r\n");
      out.write("// \t\t\t\t\t\t\t});\r\n");
      out.write("// \t\t\t\t\t\t});\r\n");
      out.write("// \t\t\t\t\t\tinput();\r\n");
      out.write("// \t\t\t\t\t}\r\n");
      out.write("// \t\t\t\t});\r\n");
      out.write("// \t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"div.line\").css({width: $(window).width()+'px'});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfunction siba() {\r\n");
      out.write("\t\t\t\t$('div:not(.line)').css({width: ($(window).width()/3)+'px'});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tsiba();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(window).resize(function () {\r\n");
      out.write("\t\t\t\tsiba()\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar select = $(\"select\").clone();\r\n");
      out.write("\t\t\tvar selChk = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"button:eq(2)\").click(function () {\r\n");
      out.write("\t\t\t\tif(!selChk) {\r\n");
      out.write("\t\t\t\t\tselChk = true;\r\n");
      out.write("\t\t\t\t\t$(this).text(\"리스트 선택하기\");\r\n");
      out.write("\t\t\t\t\t$(\"select\").replaceWith($(\"<input type='text' value='@' class='change' name='email2'>\"));\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\".change\").keyup(function (e) {\r\n");
      out.write("\t\t\t\t\t\tvar span = $(this).next();\r\n");
      out.write("\t\t\t\t\t\tvar name = $(this).prev().text();\r\n");
      out.write("\t\t\t\t\t\tvar value = $(this).val();\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tfunction s (text, bool) {\r\n");
      out.write("\t\t\t\t\t\t\tif(bool) span.attr(\"class\", \"green\");\r\n");
      out.write("\t\t\t\t\t\t\telse span.attr(\"class\", \"red\");\r\n");
      out.write("\t\t\t\t\t\t\tspan.text(text);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tvar reg = /[a-zA-Z0-9@_.-]+/;\r\n");
      out.write("\t\t\t\t\t\tvar reg2 = /^\\@([a-zA-Z0-9-_])*\\.[a-zA-Z0-9-_]{2,4}$/;\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif (e.keyCode == 17) {\r\n");
      out.write("\t\t\t\t\t\t\ts(\"Ctrl키는 사용 불가능합니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t$(this).val(\"\");\r\n");
      out.write("\t\t\t\t\t\t} else if (!value) {\r\n");
      out.write("\t\t\t\t\t\t\ts(\"이메일을 입력하세요.\");\r\n");
      out.write("\t\t\t\t\t\t} else if (!value.indexOf(\"@\") == 0) {\r\n");
      out.write("\t\t\t\t\t\t\ts(\"골뱅이를 입력하세요.\");\r\n");
      out.write("\t\t\t\t\t\t} else if (!reg.test(value)) {\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\ts(\"이메일은 숫자와 '@', '_', '.', '-', 영문만 입력 가능합니다.\");\r\n");
      out.write("\t\t\t\t\t\t}  else if (!reg2.test(value)) {\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\ts(\"유효한 도메인을 입력하세요.\");\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\ts(\"올바른 \"+name+\"입니다.\", true);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t    \t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\".change\").trigger(\"keyup\");\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tselChk = false;\r\n");
      out.write("\t\t\t\t\t$(this).text(\"직접 입력하기\");\r\n");
      out.write("\t\t\t\t\t$(this).prev().text(\"사용 가능함.\").attr(\"class\", \"green\");\r\n");
      out.write("\t\t\t\t\t$(\"input.change\").replaceWith(select);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tinput();\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar chk = false;\r\n");
      out.write("\t\t\t$(\"button.passLook\").click(function () {\r\n");
      out.write("\t\t\t\t\tif(!chk) {\r\n");
      out.write("\t\t\t\t\t\t$(this).text(\"비밀번호 안 보기\");\r\n");
      out.write("\t\t\t\t\t\t$(\"input[type='password']\").attr(\"type\", \"text\").addClass(\"pass\");\r\n");
      out.write("\t\t\t\t\t\tchk = true;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$(this).text(\"비밀번호 보기\");\r\n");
      out.write("\t\t\t\t\t\t$(\"input.pass\").attr(\"type\", \"password\");\r\n");
      out.write("\t\t\t\t\t\tchk = false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tinput();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"input\").keyup(function (e) {\r\n");
      out.write("\t\t\t\tvar span = $(this).next();\r\n");
      out.write("\t\t\t\tvar name = $(this).prev().text();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tfunction s (text, bool) {\r\n");
      out.write("\t\t\t\t\tif(bool) {\r\n");
      out.write("\t\t\t\t\t\tspan.attr(\"class\", \"green\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse span.attr(\"class\", \"red\");\r\n");
      out.write("\t\t\t\t\tspan.text(text);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(this)[0] === $(\"input:eq(0)\")[0]) {\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\turl: path+\"/member/main.json\",\r\n");
      out.write("\t\t\t\t\t\tdata: \"id=\"+$(this).val(),\r\n");
      out.write("\t\t\t\t\t\tsuccess: function (data) {\r\n");
      out.write("\t\t\t\t\t\t\tif(!data) {\r\n");
      out.write("\t\t\t\t\t\t\t\ts(\"이미 사용 중인 \"+name+\"입니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar reg = /[^a-zA-Z0-9]+/;\r\n");
      out.write("\t\t\t\tvar reg2 = /[^ㄱ-ㅎㅏ-ㅣ가-힣]/;\r\n");
      out.write("\t\t\t\tvar p1 = \"\";\r\n");
      out.write("\t\t\t\tvar p2 = \"\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar a = [\"아이디\", \"비밀번호\"];\r\n");
      out.write("\t\t\t\tvar b = [\"이름\", \"비밀번호 재확인\", \"Email 도메인\"];\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < b.length; i++) {\r\n");
      out.write("\t\t\t\t\tif (name == b[i]) {\r\n");
      out.write("\t\t\t\t\t\tp1 = \"은\";\r\n");
      out.write("\t\t\t\t\t\tp2 = \"을\"\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tp1 = \"는\";\r\n");
      out.write("\t\t\t\t\t\tp2 = \"를\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (e.keyCode == 17) {\r\n");
      out.write("\t\t\t\t\ts(\"Ctrl키는 사용 불가능합니다.\");\r\n");
      out.write("\t\t\t\t\t$(this).val(\"\");\r\n");
      out.write("\t\t\t\t} else if(!$(this).val()) {\r\n");
      out.write("\t\t\t\t\ts(name+p2+\" 입력하세요.\")\t;\r\n");
      out.write("\t\t\t\t} else if($(this).val().indexOf(\" \") > -1) {\r\n");
      out.write("\t\t\t\t\ts(\"공백을 입력하지 마세요.\");\r\n");
      out.write("\t\t\t\t\t$(this).val($(this).val().trim());\r\n");
      out.write("\t\t\t\t\t$(this).val($(this).val().replace(/[ ]/, ''));\r\n");
      out.write("\t\t\t\t} else if (!($(this)[0] === $(\"input:eq(3)\")[0]) && $(this).val().length < 4) {\r\n");
      out.write("\t\t\t\t\ts(name+p1+\" 4자리 이상 입력하세요.\");\r\n");
      out.write("\t\t\t\t} else if ($(this).val().length > 20) {\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\ts(name+p1+\" 20자까지만 사용 가능합니다.\");\r\n");
      out.write("\t\t\t\t} else if (!($(this)[0] === $(\"input:eq(3)\")[0]) && reg.test($(this).val())) {\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\ts(name+p1+\" 숫자와 영문만 입력 가능합니다.\");\r\n");
      out.write("\t\t\t\t} else if($(this)[0] === $(\"input:eq(3)\")[0] && reg2.test($(this).val())) {\r\n");
      out.write("\t\t\t\t\ts(name+p1+\" 한글만 입력 가능합니다.\");\r\n");
      out.write("\t\t\t\t} else if($(this)[0] === $(\"input:eq(2)\")[0] && $(this).val() != $(\"input:eq(1)\").val()) {\r\n");
      out.write("\t\t\t\t\ts(\"비밀번호와 \"+name+\"이 다릅니다.\")\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\ts(\"올바른 \"+name+\"입니다.\", true);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tinput();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
