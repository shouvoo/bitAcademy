/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2017-12-01 08:12:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp/include/include.jsp", Long.valueOf(1512115432527L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!-- 부트스트랩 css파일 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/css/bootstrap.min.css\">\r\n");
      out.write("<!-- jquery 파일 -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/jquery.cookie.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/waitme/waitMe.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/common.js\"></script>\r\n");
      out.write("<!-- 부트스트랩 js파일 -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/lib/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!-- baisc.css 파일 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/basic.css\">\r\n");
      out.write("<!-- 폰트어썸 CDN(Content Delivery Network) -->\r\n");
      out.write("<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\r\n");
      out.write("<!-- 구글 폰트 -->\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\">\r\n");
      out.write("<!-- w3.css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("<!-- Roboto폰트 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto\">\r\n");
      out.write("<!-- Montserrat 폰트 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Montserrat\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js\"></script>\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<fieldset class=\"login_form\">\r\n");
      out.write("\t\t\t\t\t<legend class=\"blind\">로그인</legend>\r\n");
      out.write("\t\t\t\t\t<div class=\"input_row\" id=\"id_area\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"input_box\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"id\" id=\"label_id_area\" class=\"lbl\">아이디</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" id=\"id\" name=\"id\" tabindex=\"7\" accesskey=\"L\" placeholder=\"아이디\" class=\"int\" maxlength=\"41\" value=\"\">\r\n");
      out.write("\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"err_empty_id\" class=\"error\" style=\"display:none;\">아이디를 입력해주세요.</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"input_row\" id=\"pw_area\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"input_box\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"pw\" id=\"label_pw_area\" class=\"lbl\">비밀번호</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" id=\"pw\" name=\"pw\" tabindex=\"8\" placeholder=\"비밀번호\" class=\"int\" maxlength=\"16\">\r\n");
      out.write("\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"error\" id=\"err_empty_pw\" style=\"display:none;\">비밀번호를 입력해주세요.</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"check_info\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"login_check\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"login_check_box\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"id_chk\" name=\"nvlong\" class=\"\" tabindex=\"9\" value=\"off\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"id_chk\" id=\"label_login_chk\" class=\"sp\">아이디 저장</label>\r\n");
      out.write("\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"login_check\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"login_check_box\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"login_chk\" name=\"nvlong\" class=\"\" tabindex=\"9\" value=\"off\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"login_chk\" id=\"label_login_chk\" class=\"sp\">로그인 상태 유지</label>\r\n");
      out.write("\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" title=\"로그인\" alt=\"로그인\" tabindex=\"12\" value=\"로그인\" class=\"btn_global\">\r\n");
      out.write("\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\tvar path = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\tfunction aa(dd) {\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\turl: path+\"/member/login.json\",\r\n");
      out.write("\t\t\t\t\t\t\tdata: dd,\r\n");
      out.write("\t\t\t\t\t\t\tsuccess: function (data) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif(data) {alert(\"로그인 성공\"); location.href = path+\"/main/main.do\";}\r\n");
      out.write("\t\t\t\t\t\t\t\telse alert(\"로그인 실패\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif($.cookie(\"chk\")){\r\n");
      out.write("\t\t\t\t\t\taa(\"chk=true&id=\"+$.cookie(\"id\")+\"&pass=\"+$.cookie(\"pass\")+\"&cc=true\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#login_chk\").prop(\"checked\", \"true\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif($.cookie(\"id\")) {\r\n");
      out.write("\t\t\t\t\t\t$(\"#id\").val($.cookie(\"id\"));\r\n");
      out.write("\t\t\t\t\t\t$(\"#id_chk\").prop(\"checked\", \"true\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t$(\".btn_global\").click(function () {\r\n");
      out.write("\t\t\t\t\t\tif(!$(\"#id\").val()) {alert(\"아이디를 입력하세요.\"); return;}\r\n");
      out.write("\t\t\t\t\t\tif(!$(\"#pw\").val()) {alert(\"비밀번호를 입력하세요.\"); return;}\r\n");
      out.write("\t\t\t\t\t\taa(\"chk=\"+$(\"#id_chk\").prop(\"checked\")+\"&id=\"+$(\"#id\").val()+\"&pass=\"+$(\"#pw\").val()+\"&cc=\"+$(\"#login_chk\").prop(\"checked\"));\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
